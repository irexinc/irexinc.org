#!/bin/bash

FTPUSER="username"
FTPPASS="password"
FTPHOST="hostname"
OUTPUT=/tmp/$FTPHOST-deploy

echo ''
echo '' > $OUTPUT

info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  echo "See $OUTPUT for more information."
  exit
}

#
# Make sure our vendor directory is updated to exclude no dev packages.
#
info 'updating composer packages excluding dev'
composer update --no-dev >> $OUTPUT 2>&1
success 'updated composer packages'

#
# Update the site with git-ftp.
#
# https://github.com/git-ftp/git-ftp
#
info 'updating site content'
git ftp push -u $FTPUSER -p $FTPPASS - $FTPHOST >> $OUTPUT 2>&1
success 'updated site content'

#
# Use lftp to update vendor and remove 'cache'.
#
# http://lftp.yar.ru/
#
info 'updating vendor cache on remote server'
lftp -u $FTPUSER,$FTPPASS $FTPHOST << EOF
set mirror:use-pget-n 5

mirror -R vendor/ vendor/
put composer.lock
put composer.json

mrm -r app/storage/*/*

quit
EOF >> $OUTPUT 2>&1
success 'updated vendor cache'

#
# Make sure we revert our vendor stack back to dev
#
info 'reverting to our dev environment'
composer update --dev >> $OUTPUT 2>&1
success 'dev reverted'
