#!/bin/bash
#
# This script allows us to build the zip file for the entire site or just a diff
# from the last time we deployed.

# Die if we aren't running from ./script/build
if [ "$0" != "./script/build" ]
then
  echo "Please run from the root directory of the repository."
  exit 0
fi

# Just in case.
mkdir -p ./build/

# Update ./vendor/ packages.
composer update


# This is our current sha for our HEAD.
currentSha="$( git log | head -n 1 | awk '{ print $2 }' )"

# No matter what, assume we have a previous sha.
lastSha="$(cat ./script/lastSha | tail -n 1)"


# What we want to archive.
what="master"

if ! [ -z "$1" ]
then
  case "$1" in

    # Build the entire site from the current HEAD.
    "site" )

      filename="./build/site_deploy-$currentSha.zip"

      ;;

    # Build just the diff from the last SHA to the current HEAD.
    "diff" )

      if [ ! -z "$lastSha" ]
      then

        filename="./build/site_update-$lastSha-$currentSha.zip"

        # This generates a file list for our diff only.
        what="$(git diff $lastSha master --name-only)"

      else

        echo "Notice: Could not find a previous sha."
        filename="./build/site_update-master.zip"

      fi
      ;;

  esac


  # Remove previous file if it exists.
  if [ -f $filename ]
  then
    rm -f $filename
  fi


  # Actually do the archiving.
  if [ "$what" = "master" ]
  then

    # Zip the entire application.
    zip $filename -r9 app LICENSE artisan composer.json composer.lock irexinc.org phpunit.xml readme.md server.php

    # Manipulate the app/storage directory a little.
    zip $filename -d app/storage/\*\*/\*
    zip $filename -u app/storage/views app/storage/sessions app/storage/meta app/storage/logs app/storage/cache

  else

    # Create the diff archive.
    zip $filename -r9 $what

  fi


  # Setup the bootstrap/compiled.php with our production path.
  sed 's/\/Users\/matt\/code\/irexinc.org/\/hsphere\/local\/home\/irexinc/g' ./bootstrap/compiled.php > ./bootstrap/compiled.php.new && mv ./bootstrap/compiled.php.new ./bootstrap/compiled.php


  # We are always going to update the vendor folder section because we updated
  # that directory at the start of this build.
  zip $filename -ur vendor bootstrap

  # Remove unneeded files from vendor directory.
  zip $filename -d \*.git/\* \*\*/.DS_Store \*\*/.gitkeep \*.gitignore

  # We don't need phpunit or symfony/yaml on production.
  zip $filename -d vendor/phpunit/\* vendor/symfony/yaml/\*


  # Reset the bootstrap/compiled script
  sed 's/\/hsphere\/local\/home\/irexinc/\/Users\/matt\/code\/irexinc.org/g' ./bootstrap/compiled.php > ./bootstrap/compiled.php.new && mv ./bootstrap/compiled.php.new ./bootstrap/compiled.php


  # Save off the last commit sha for building just an udpate diff.
  echo -n "\n$currentSha" >> ./script/lastSha

  # If we are wanting to deploy at the same time, lets handle it.
  if [ ! -z "$2" ]
  then
    ./script/deploy "$2" "$filename"
  fi

else

  printf 'Usage: build (site|diff) [prod].\n'

fi