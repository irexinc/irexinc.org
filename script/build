#!/bin/bash
#
# This script allows us to build the zip file for the entire site or just a diff
# from the last time we deployed.

# Die if we aren't running from ./script/build
if [ "$0" != "./script/build" ]
then
  echo "Please run from the root directory of the repository."
  exit 0
fi

# Just in case.
mkdir -p ./build/

# This is our current sha for our HEAD.
currentSha="$( git log | head -n 1 | awk '{ print $2 }' )"

# No matter what, assume we have a previous sha.
lastSha="`awk -F\# '{ print $2 }' <<< $(cat $0 | tail -n 1)`"

# Remove the last sha from the end of the file and save it to a temp file.
sed '$ d' ./script/build > ./script/build.tmp

# What we want to archive.
what="master"

if ! [ -z "$1" ]
then
  case "$1" in

    # Build the entire site from the current HEAD.
    "site" )

      filename="./build/site_deploy-$currentSha"

      ;;

    # Build just the diff from the last SHA to the current HEAD.
    "diff" )

      if [ ! -z "$lastSha" ]
      then

        filename="./build/site_update-$lastSha-$currentSha"
        what="$what $(git diff $lastSha master --name-only)"

      else

        echo "Notice: Could not find a previous sha."
        filename="./build/site_update-master"

      fi
      ;;

  esac

  # Append .zip to the filename.
  filename="$filename.zip"

  # Remove previous file if it exists.
  if [ -f $filename ]
  then
    rm -f $filename
  fi

  # Actually do the archiving.
  git archive --format=zip --prefix='/' $what -o $filename

  # Since we are building from git archive, we need to include files that are
  # excluded from git by .gitignore.
  zip $filename -ur ./vendor/ ./composer.lock ./bootstrap/compiled.php ./app/config/production/ ./app/database/seeds/membersTableSeeder.php

  # Remove unneeded files that would be included from the previous additions.
  zip $filename -d \*.git/\* \*\*/.DS_Store \*\*/.gitkeep \*.gitignore ./app/storage/\*\*/\* ./script/ ./script/\* ./build/ ./build/\* ./logs/

  # Readd the applications storage directories back to the zip.
  zip $filename -u app/storage/views app/storage/sessions app/storage/meta app/storage/logs app/storage/cache

  # Save off the last commit sha for building just an udpate diff.
  echo -n "#$currentSha" >> ./script/build.tmp

else
  printf 'Usage: build (site|diff).\n'
fi

# Setup our new build script.
rm -f ./script/build && mv ./script/build.tmp ./script/build && chmod 0755 ./script/build

# Last Deployed sha (DO NOT DELETE):
#e717ca458fad673cb45ab2e0390b93b80ce0c170